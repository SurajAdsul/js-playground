name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        
      - name: Build Electron app
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_IDENTITY_AUTO_DISCOVERY: false
        run: |
          if [ "${{ matrix.os }}" = "macos-latest" ]; then
            npm run build:mac-unsigned
          elif [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            npm run build:linux
          else
            npm run build:win
          fi
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: js-playground-${{ matrix.os }}
          path: |
            release/**/*.dmg
            release/**/*.exe
            release/**/*.AppImage
          if-no-files-found: ignore

  create-release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Display structure of downloaded files
        run: ls -R artifacts
        
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: JavaScript Playground ${{ steps.get_version.outputs.VERSION }}
          draft: true
          files: artifacts/**/*
          generate_release_notes: true
