name: Build and Release

on:
  push:
    tags:
      - 'v*'

# Add permissions at the workflow level
permissions:
  contents: write
  packages: read
  issues: read
  pull-requests: read

jobs:
  build:
    name: Build (${{ matrix.os }} ${{ matrix.arch || '' }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # macOS builds - separate for each architecture
          - os: macos-latest
            build-command: build:mac-x64
            arch: x64
          - os: macos-latest
            build-command: build:mac-arm64
            arch: arm64
          # Windows and Linux builds
          - os: ubuntu-latest
            build-command: build:linux
          - os: windows-latest
            build-command: build:win

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        
      - name: Build Electron app
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_IDENTITY_AUTO_DISCOVERY: false
        run: npm run ${{ matrix.build-command }}
        shell: bash

      - name: List release directory
        run: |
          ls -R release/
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: js-playground-${{ matrix.os }}-${{ matrix.arch || 'x64' }}
          path: |
            release/**/*.dmg
            release/**/*.exe
            release/**/*.AppImage
          if-no-files-found: warn

  create-release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    # We don't need to specify permissions here since they're inherited from the workflow level
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true
          
      - name: Display structure of downloaded files
        run: |
          echo "Listing all artifacts:"
          ls -R artifacts
        shell: bash
        
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          name: JavaScript Playground ${{ steps.get_version.outputs.VERSION }}
          draft: true
          files: artifacts/**/*
          generate_release_notes: true
          fail_on_unmatched_files: false
